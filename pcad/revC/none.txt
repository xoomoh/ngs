
старые озу: A0..A18 (512kb) x4 = 2048kb. A0..A18 + 4xCS
новые озу: A0..A20 (2048kb) x2 = 4096kb. A0..A20 + 2xCS

Как сделать ФПГА универсальной для обоих вариантов ОЗУ?
Из фпга выходят 4xCS и был изначально предусмотен выход ещё одного
адресного разряда. Этот разряд можно сразу подать на A20 ОЗУ,
а цплдой делать из 4 рамцсов - два и доп. адресный разряд A19.

При холодном старте из цплд процу видны только последние 64кб из первого
чипа ОЗУ (только RAMCS0 и пуллапы на адреса). 512-64kb..512kb
Новые чипы по 2048kb.
newRAMCS0, ram.A19=0, ram.A20=0, ram.A18=1, ram.A17=1, ram.A16=1.

Предполагалось такое декодирование в фпга:
memA0..18  -> ramA0..18,
memA19,A20 -> RAMCS0..3
memA21     -> ramA20
Тогда в старом варианте (revB) будут адресоваться 2 метра, а еще два заворачиваться.
В новом - все 4 (с учётом перекодирования 4х ЦСов в два и адрес в цплд).

тут ноги цплд: 4 входа рамцсов, два выхода рамцсов, один выход адреса.
6 ног (столько и свободно, всё равно под завязку).

НЕДОСТАТОК: нельзя запаять 1 чип вместо 2 (2 метра вместо 4).


Как можно обойти это? ramцсы должны зависеть только от memA21.
Итого: ramcs0..3+mema21 -> ramA19,ramA20,ramcs0..1

ВАЖНО!
после всех решений относительно переадресации чипов памяти, буферизации адресов и
данных, надо посчитать времянки, убедившись, что на 24мгц всё будет работать.

